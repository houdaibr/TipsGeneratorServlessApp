import {  GradientBackgroundCon } from '@/components/NewsGenerator/NewsGeneratorElements'
import Head from 'next/head'
import Image from 'next/image'
import React, { useEffect, useState } from 'react'


import { BackgroundImage1, BackgroundImage2, FooterCon, FooterLink, RedSpan, GenerateQuoteButton, GenerateQuoteButtonText, QuoteGeneratorCon, QuoteGeneratorInnerCon, QuoteGeneratorSubTitle, QuoteGeneratorTitle} from '@/components/NewsGenerator/NewsGeneratorElements'

import Cloudy from '../assets/cloudy.png'
import Cloudi from '../assets/cloudi.png'

import { Amplify } from 'aws-amplify';
import { generateClient } from 'aws-amplify/api';
import { generateAQuote, quotesQueryName } from '@/src/graphql/queries'

import { GraphQLResult } from '@aws-amplify/api-graphql'


// interface for our DynamoDB object
interface UpdateQuoteInfoData {
  id: string;
  queryName: string;
  quotesGenerated: number;
  createdAt: string;
  updatedAt: string;
}
// type guard for our fetch function
function isGraphQLResultForquotesQueryName(response: any): response is GraphQLResult<{
  quotesQueryName: {
    items: [UpdateQuoteInfoData];
  };
}> {
  return response.data && response.data.quotesQueryName && response.data.quotesQueryName.items;
}



export default function Home() {
  const [numberOfQuotes, setNumberOfQuotes] = useState<Number | null>(0);
  const client = generateClient();

  const updateQuoteInfo = async () => {
    try {
      const response = await client.graphql<UpdateQuoteInfoData>({
        query: quotesQueryName,
        variables: {
          queryName: "Life",
        },
      })
      console.log('response', response);
      // Create type guards
      if (!isGraphQLResultForquotesQueryName(response)) {
        throw new Error('Unexpected response from API.graphql');
      }

      if (!response.data) {
        throw new Error('Response data is undefined');
      }

      const receivedNumberOfQuotes = response.data.quotesQueryName.items[0].quotesGenerated;
      setNumberOfQuotes(receivedNumberOfQuotes);
    

     


    } catch (error) {
      console.log('error getting quote data', error)
    }
  }

  useEffect(() => {
    updateQuoteInfo();
  }, [])





  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GradientBackgroundCon>

<QuoteGeneratorCon>
<QuoteGeneratorInnerCon>
  <QuoteGeneratorTitle>
  Daily News Explorer: Your Source for Timely and Relevant Headlines  </QuoteGeneratorTitle>
  <QuoteGeneratorSubTitle>
  Exploring the latest headlines? Dive into a news card featuring a random current event or story provided by the <FooterLink href="https://newsapi.ai/" target="_blank" rel="noopener noreferrer">NewsAPI.ai</FooterLink> key.
  </QuoteGeneratorSubTitle>
  <GenerateQuoteButton>
    <GenerateQuoteButtonText >
      Get Latest News
    </GenerateQuoteButtonText>
  </GenerateQuoteButton>
</QuoteGeneratorInnerCon>
</QuoteGeneratorCon>



      <BackgroundImage1 
          src={Cloudi}
          height="300"
          alt="cloudybackground1"
        />

        <BackgroundImage2 
          src={Cloudy}
          height="300"
          alt="cloudybackground1"
        />
         <FooterCon>
          <>
            News Generated: {numberOfQuotes}
            <br />
            Developed with <RedSpan>â™¥</RedSpan> by <FooterLink href="" target="_blank" rel="noopener noreferrer"> @Houda </FooterLink>
          </>
        </FooterCon>
              </GradientBackgroundCon>
    </>
  )
}
